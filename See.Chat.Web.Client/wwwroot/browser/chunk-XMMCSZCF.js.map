{
  "version": 3,
  "sources": ["src/app/pages/dashboard/services/dashboard.service.ts", "src/app/pages/dashboard/components/dashboard/dashboard.component.ts", "src/app/pages/dashboard/components/dashboard/dashboard.component.html"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { APPLICATION_CONFIG, ChatRoomData } from '@shared/types/shared.types';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  http = inject(HttpClient);\r\n  config = inject(APPLICATION_CONFIG);\r\n\r\n  getChatRooms(): Observable<ChatRoomData[]> {\r\n    const url = `${this.config.hubUrl}/api/rooms`;\r\n    return this.http.get<ChatRoomData[]>(url);\r\n  }\r\n}\r\n", "import { Component, inject } from '@angular/core';\r\nimport { ConnectionService } from '@shared/services/connection.service';\r\nimport { StreamService } from '@shared/services/stream.service';\r\nimport { DashboardService } from '../../services/dashboard.service';\r\nimport { ChatRoomData } from '@shared/types/shared.types';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrl: './dashboard.component.css'\r\n})\r\nexport default class DashboardComponent {\r\n  connectionService = inject(ConnectionService);\r\n  streamService = inject(StreamService);\r\n  dashboardService = inject(DashboardService);\r\n\r\n  chatRooms: ChatRoomData[] = [];\r\n\r\n  ngOnInit() {\r\n    this.dashboardService.getChatRooms().subscribe({\r\n      next: rooms => {\r\n        this.chatRooms = rooms;\r\n        this.setEvents();\r\n      }\r\n    });\r\n  }\r\n\r\n  setEvents() {\r\n    this.connectionService.initializeConnection().then(() => {\r\n      this.connectionService.connectionHub.on(\"NewChatRoom\", (roomName, connectionId) => {\r\n        this.chatRooms.push({ connectionId, roomName });\r\n      });\r\n  \r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.connectionService.connectionHub.off(\"NewChatRoom\");\r\n  }\r\n}\r\n", "<div class=\"d-flex flex-row\">\r\n    @for (item of chatRooms; track $index){\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <h5 class=\"card-title\">{{ item.roomName }}</h5>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <a [routerLink]=\"['/chat-room', item.connectionId]\">Join</a>\r\n        </div>\r\n    </div>\r\n    } @empty {\r\n    <div class=\"alert alert-info\" role=\"alert\">No chat rooms available</div>\r\n    }\r\n</div>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQM,IAAO,oBAAP,MAAO,kBAAgB;EAH7B,cAAA;AAKE,SAAA,OAAO,OAAO,UAAU;AACxB,SAAA,SAAS,OAAO,kBAAkB;;EAElC,eAAY;AACV,UAAM,MAAM,GAAG,KAAK,OAAO,MAAM;AACjC,WAAO,KAAK,KAAK,IAAoB,GAAG;EAC1C;;;mBARW,mBAAgB;AAAA;qFAAhB,mBAAgB,SAAhB,kBAAgB,WAAA,YAFf,OAAM,CAAA;AAEd,IAAO,mBAAP;;;;;;AENF,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,OAAA,CAAA,EACW,GAAA,MAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAK;AAEnD,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAyB,GAAA,KAAA,CAAA;AAC+B,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA,EAAI,EAC1D;;;;AAJqB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,QAAA;AAGpB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,0BAAA,GAAA,KAAA,QAAA,YAAA,CAAA;;;;;AAIX,IAAA,yBAAA,GAAA,OAAA,CAAA;AAA2C,IAAA,iBAAA,GAAA,yBAAA;AAAuB,IAAA,uBAAA;;;ADItE,IAAqB,sBAArB,MAAqB,oBAAkB;EAPvC,cAAA;AAQE,SAAA,oBAAoB,OAAO,iBAAiB;AAC5C,SAAA,gBAAgB,OAAO,aAAa;AACpC,SAAA,mBAAmB,OAAO,gBAAgB;AAE1C,SAAA,YAA4B,CAAA;;EAE5B,WAAQ;AACN,SAAK,iBAAiB,aAAY,EAAG,UAAU;MAC7C,MAAM,WAAQ;AACZ,aAAK,YAAY;AACjB,aAAK,UAAS;MAChB;KACD;EACH;EAEA,YAAS;AACP,SAAK,kBAAkB,qBAAoB,EAAG,KAAK,MAAK;AACtD,WAAK,kBAAkB,cAAc,GAAG,eAAe,CAAC,UAAU,iBAAgB;AAChF,aAAK,UAAU,KAAK,EAAE,cAAc,SAAQ,CAAE;MAChD,CAAC;IAEH,CAAC;EACH;EAEA,cAAW;AACT,SAAK,kBAAkB,cAAc,IAAI,aAAa;EACxD;;;mBA3BmB,qBAAkB;AAAA;oFAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,UAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,QAAA,SAAA,GAAA,SAAA,YAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,YAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACfvC,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,2BAAA,GAAA,mCAAA,GAAA,GAAA,OAAA,GAAA,kCAAA,OAAA,wCAAA,GAAA,GAAA,OAAA,CAAA;AAYJ,IAAA,uBAAA;;;AAZI,IAAA,oBAAA;AAAA,IAAA,qBAAA,IAAA,SAAA;;kBDUQ,cAAc,cAAY,UAAA,EAAA,CAAA;AAItC,IAAqB,qBAArB;;6EAAqB,oBAAkB,EAAA,WAAA,sBAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
