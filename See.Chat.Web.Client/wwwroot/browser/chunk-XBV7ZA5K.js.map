{
  "version": 3,
  "sources": ["src/app/pages/chat-room/services/chat-room.service.ts", "src/app/pages/chat-room/components/chat-room/chat-room.component.ts", "src/app/pages/chat-room/components/chat-room/chat-room.component.html"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatRoomService {\r\n\r\n  constructor() { }\r\n}\r\n", "import { Component, inject } from '@angular/core';\r\nimport { ChatRoomService } from '../../services/chat-room.service';\r\nimport { ActivatedRoute, RouterModule } from '@angular/router';\r\nimport { ChatRoomData, UserInfo } from '@shared/types/shared.types';\r\nimport { ConnectionService } from '@shared/services/connection.service';\r\nimport { StreamService } from '@shared/services/stream.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-room',\r\n  standalone: true,\r\n  imports: [RouterModule],\r\n  templateUrl: './chat-room.component.html',\r\n  styleUrl: './chat-room.component.css',\r\n})\r\nexport default class ChatRoomComponent {\r\n  connectionService = inject(ConnectionService);\r\n  streamService = inject(StreamService);\r\n\r\n  chatRoomService = inject(ChatRoomService);\r\n  route = inject(ActivatedRoute);\r\n\r\n  chatRoom!: ChatRoomData;\r\n  currentUser: UserInfo = { userName: 'Test', connectionId: '' };\r\n\r\n  ngOnInit() {\r\n    this.chatRoom = this.route.snapshot.data['chatRoom'] as ChatRoomData;\r\n    if (this.chatRoom) {\r\n      this.setEvents();\r\n    }\r\n  }\r\n\r\n  setEvents() {\r\n    this.connectionService.initializeConnection().then(() => {\r\n      this.connectionService.connectionHub.on(\"AcceptConnection\", (userName, connectionId) => {\r\n        this.currentUser = { userName, connectionId };\r\n      });\r\n\r\n      this.connectionService.connectionHub.invoke(\"RequestConnection\", this.currentUser.userName, this.chatRoom.connectionId).then(() => {\r\n\r\n      });\r\n    });\r\n  }\r\n}\r\n", "<p>chat-room works!</p>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAKM,IAAO,mBAAP,MAAO,iBAAe;EAE1B,cAAA;EAAgB;;;mBAFL,kBAAe;AAAA;oFAAf,kBAAe,SAAf,iBAAe,WAAA,YAFd,OAAM,CAAA;AAEd,IAAO,kBAAP;;;ACSN,IAAqB,qBAArB,MAAqB,mBAAiB;EAPtC,cAAA;AAQE,SAAA,oBAAoB,OAAO,iBAAiB;AAC5C,SAAA,gBAAgB,OAAO,aAAa;AAEpC,SAAA,kBAAkB,OAAO,eAAe;AACxC,SAAA,QAAQ,OAAO,cAAc;AAG7B,SAAA,cAAwB,EAAE,UAAU,QAAQ,cAAc,GAAE;;EAE5D,WAAQ;AACN,SAAK,WAAW,KAAK,MAAM,SAAS,KAAK,UAAU;AACnD,QAAI,KAAK,UAAU;AACjB,WAAK,UAAS;IAChB;EACF;EAEA,YAAS;AACP,SAAK,kBAAkB,qBAAoB,EAAG,KAAK,MAAK;AACtD,WAAK,kBAAkB,cAAc,GAAG,oBAAoB,CAAC,UAAU,iBAAgB;AACrF,aAAK,cAAc,EAAE,UAAU,aAAY;MAC7C,CAAC;AAED,WAAK,kBAAkB,cAAc,OAAO,qBAAqB,KAAK,YAAY,UAAU,KAAK,SAAS,YAAY,EAAE,KAAK,MAAK;MAElI,CAAC;IACH,CAAC;EACH;;;mBA3BmB,oBAAiB;AAAA;mFAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACdtC,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA;;kBDUP,YAAY,EAAA,CAAA;AAIxB,IAAqB,oBAArB;;6EAAqB,mBAAiB,EAAA,WAAA,qBAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
