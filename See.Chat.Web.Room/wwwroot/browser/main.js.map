{
  "version": 3,
  "sources": ["src/app/app.routes.ts", "src/app/app.config.ts", "src/app/app.component.ts", "src/app/app.component.html", "src/main.ts"],
  "sourcesContent": ["import { Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n    { path: 'dashboard', loadComponent: () => import('./pages/dashboard/components/dashboard/dashboard.component') },\r\n    { path: 'chat-room', loadComponent: () => import('./pages/chat-room/components/chat-room/chat-room.component') },\r\n    { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n];\r\n", "import { APP_INITIALIZER, ApplicationConfig } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\n\r\nimport { routes } from './app.routes';\r\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\r\nimport { firstValueFrom, tap } from 'rxjs';\r\nimport { APPLICATION_CONFIG, GlobalConfiguration } from '@shared/types/shared.types';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideHttpClient(withInterceptorsFromDi()),\r\n    {\r\n      provide: APPLICATION_CONFIG,\r\n      useValue: {\r\n        hubUrl: ''\r\n      }\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      multi: true,\r\n      deps: [HttpClient, APPLICATION_CONFIG],\r\n    },\r\n  ]\r\n\r\n};\r\n\r\nexport function initializeApp(http: HttpClient, appConfig: GlobalConfiguration) {\r\n  return (): Promise<any> =>\r\n    firstValueFrom(\r\n      http\r\n        .get<GlobalConfiguration>('/api/config')\r\n        .pipe(tap(config => {\r\n          appConfig.hubUrl = config.hubUrl\r\n        }))\r\n    );\r\n}", "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'ChatRoomManager';\r\n}\r\n", "<router-outlet />\r\n", "import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAEO,IAAM,SAAiB;EAC1B,EAAE,MAAM,aAAa,eAAe,MAAM,OAAO,qBAA4D,EAAC;EAC9G,EAAE,MAAM,aAAa,eAAe,MAAM,OAAO,qBAA4D,EAAC;EAC9G,EAAE,MAAM,IAAI,YAAY,aAAa,WAAW,OAAM;;;;ACGnD,IAAM,YAA+B;EAC1C,WAAW;IACT,cAAc,MAAM;IACpB,kBAAkB,uBAAsB,CAAE;IAC1C;MACE,SAAS;MACT,UAAU;QACR,QAAQ;;;IAGZ;MACE,SAAS;MACT,YAAY;MACZ,OAAO;MACP,MAAM,CAAC,YAAY,kBAAkB;;;;AAMrC,SAAU,cAAc,MAAkBA,YAA8B;AAC5E,SAAO,MACL,eACE,KACG,IAAyB,aAAa,EACtC,KAAK,IAAI,YAAS;AACjB,IAAAA,WAAU,SAAS,OAAO;EAC5B,CAAC,CAAC,CAAC;AAEX;;;AC3BM,IAAO,gBAAP,MAAO,cAAY;EAPzB,cAAA;AAQE,SAAA,QAAQ;;;;mBADG,eAAY;AAAA;8EAAZ,eAAY,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,sBAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACVzB,IAAA,oBAAA,GAAA,eAAA;;kBDMY,YAAY,EAAA,CAAA;AAIlB,IAAO,eAAP;;6EAAO,cAAY,EAAA,WAAA,gBAAA,UAAA,8BAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AENzB,qBAAqB,cAAc,SAAS,EACzC,MAAM,CAAC,QAAQ,QAAQ,MAAM,GAAG,CAAC;",
  "names": ["appConfig"]
}
